<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <name>shelter-server</name>
    <groupId>com.ffg.shelter</groupId>
    <artifactId>shelter-server</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
<!--
    <name>csb-staging:shelter</name>
    <groupId>com.ffg.shelter</groupId>
    <artifactId>csb-staging</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
-->

    <properties>
        <resthub.spring.stack.version>2.1.2</resthub.spring.stack.version>
        <jetty.version>8.1.7.v20120910</jetty.version>
        <jetty.port>8080</jetty.port>
        <app.id>shelter-server</app.id>
        <app.version>1</app.version>
        <appengine.version>1.9.25</appengine.version>
        <gcloud.plugin.version>0.9.58.v20150505</gcloud.plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    </properties>

    <dependencies>
	 <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${appengine.version}</version>
        </dependency>

        <dependency>
            <groupId>org.resthub</groupId>
            <artifactId>resthub-jpa</artifactId>
            <version>${resthub.spring.stack.version}</version>
        </dependency>

        <dependency>
            <groupId>org.resthub</groupId>
            <artifactId>resthub-web-server</artifactId>
            <version>${resthub.spring.stack.version}</version>
        </dependency>

        <dependency>
            <groupId>org.resthub</groupId>
            <artifactId>resthub-test</artifactId>
            <version>${resthub.spring.stack.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.25</version>
            <scope>test</scope> <!--this need be commented out for local test-->
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>1.8.0</version>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>1.8.0</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>gmultipart</groupId>-->
            <!--<artifactId>gmultipart</artifactId>-->
            <!--<version>0.4</version>-->
        <!--</dependency>-->


        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>3.1.4.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>3.1.4.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>3.1.4.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>3.2.2.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>3.2.2.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>3.2.2.RELEASE</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${appengine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${appengine.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <repositories>
        <!-- Contains all RESThub artifacts and transitive dependencies -->
        <!--<repository>
            <id>resthub</id>
            <url>http://nexus.pullrequest.org/content/groups/resthub</url>
        </repository> -->
        <!-- Contains all RESThub snasphot artifacts - uncomment to use -->
        <!--repository>
            <id>resthub snapshots</id>
            <url>http://nexus.pullrequest.org/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository-->

        <!--<repository>-->
            <!--<id>gmultipart</id>-->
            <!--<url>http://gmultipart.googlecode.com/svn/repo/m2</url>-->
        <!--</repository>-->
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--<plugin>-->
                <!--<groupId>com.google.appengine</groupId>-->
                <!--<artifactId>appengine-maven-plugin</artifactId>-->
                <!--<version>1.8.0</version>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <!--<webApp>-->
                        <!--<descriptor>/path/to/web.xml</descriptor>-->
                    <!--</webApp>-->
                    <!-- We use non NIO connector in order to avoid read only static files under windows -->
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.bio.SocketConnector">
                            <port>${jetty.port}</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                </configuration>
 <dependencies>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>0.9.29</version>
      </dependency>
    </dependencies>
            </plugin>

            <plugin>
                <groupId>com.google.appengine</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
                <version>${appengine.version}</version>
                <configuration>
                    <enableJarClasses>false</enableJarClasses>
                    <version>${app.version}</version>
                    <!-- Comment in the below snippet to bind to all IPs instead of just localhost -->
                    <!-- address>0.0.0.0</address>
                    <port>8080</port -->
                    <!-- Comment in the below snippet to enable local debugging with a remote debugger
                         like those included with Eclipse or IntelliJ -->
                    <!-- jvmFlags>
                      <jvmFlag>-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n</jvmFlag>
                    </jvmFlags -->
                </configuration>
            </plugin>
            <plugin>
              <groupId>com.google.appengine</groupId>
              <artifactId>gcloud-maven-plugin</artifactId>
              <version>${gcloud.plugin.version}</version>
              <configuration>
                <set_default>true</set_default>
              </configuration>
            </plugin>

        </plugins>
    </build>
</project>
